package projectEuler

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * @author Robert Giacinto
 */

object Problem2 {

  private def fibonacci(n: Int): Int = n match {
    case 0 | 1 => n
    case _ => fibonacci(n - 1) + fibonacci(n - 2)
  }

  private def fibonacciList(max: Int) = List.range(1, max) map {
    case i => fibonacci(i)
  }


  def solve = {
    println("Problem 2: \n" +
      "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:\n " +
      "1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\n " +
      "By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.\n")
    print("Solution: ")
    println(fibonacciList(10))
  }

}
